#include <pthread.h>

pthread_mutex_t mutex;

// Initialize
pthread_mutex_init(&mutex, NULL);

// Lock (enter critical section)
pthread_mutex_lock(&mutex);

// Critical section...

// Unlock (leave critical section)
pthread_mutex_unlock(&mutex);

// Destroy when done
pthread_mutex_destroy(&mutex);



=================================================================================================
void *routine(void *arg) {
    printf("Hello from thread!\n");
    return NULL;
}

int main() {
    pthread_t t;
    pthread_create(&t, NULL, routine, NULL);
    pthread_join(t, NULL);
}

========================================================================================
#include <pthread.h>

// Create a thread
pthread_t thread;
pthread_create(&thread, NULL, routine_function, arg);

// Wait for a thread to finish
pthread_join(thread, NULL);

// Detach a thread (no join required)
pthread_detach(thread);
